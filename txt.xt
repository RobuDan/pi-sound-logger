# Problem Summary

The `AudioStream` component was causing blocking behavior in the event loop, leading to unexpected side effects such as:

- Application restart on `CTRL+C`
- Stalling of concurrent streams (e.g., `AcousticStream`)
- Incomplete or skipped LAeq calculations due to read delays

---

# Root Cause

The following line was identified as blocking, even within an async context:

```python
with sd.InputStream(...) as stream:
    audio_frames, _ = stream.read(frames_per_chunk)
Although wrapped inside an async function, the sounddevice library uses synchronous I/O, which blocked the event loop.

# Solution
Replaced the blocking stream.read(...) call with:
await asyncio.to_thread(stream.read, frames_per_chunk)
This safely delegates the synchronous call to a background thread, preventing loop blockage.

#Bonus Issue (AcousticStream)